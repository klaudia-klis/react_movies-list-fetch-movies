{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","App.tsx","api.ts","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","onSearch","error","onAdd","isLoading","clearErrorMessage","useState","movieTitle","setMovieTitle","onSubmit","event","preventDefault","htmlFor","type","id","value","onChange","target","placeholder","classNames","disabled","onClick","App","setMovies","setMovie","Response","Error","movieData","setMovieData","setError","setIsLoading","useEffect","response","Plot","Poster","imdbID","Title","currentMovie","data","query","fetch","then","res","json","catch","finally","find","selectedMovie","ReactDOM","render","document","getElementById"],"mappings":"8TAQaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,sBAAKC,UAAU,OAAO,UAAQ,YAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACE,UAAQ,cACRC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,aAAlC,SAAgDD,EAAMK,aAI1D,sBAAKJ,UAAU,UAAU,UAAQ,mBAAjC,UACGD,EAAMM,YACP,uBACA,mBAAGC,KAAMP,EAAMQ,QAAS,UAAQ,WAAhC,4BC3BKC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMY,c,wBCCNC,EACT,SAAC,GAEI,IADLC,EACI,EADJA,SAAUd,EACN,EADMA,MAAOe,EACb,EADaA,MAAOC,EACpB,EADoBA,MAAOC,EAC3B,EAD2BA,UAAWC,EACtC,EADsCA,kBAE1C,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OACE,qCACE,uBAAMpB,UAAU,aAAaqB,SAZY,SAACC,GAC5CA,EAAMC,iBACNV,EAASM,IAUP,UACE,sBAAKnB,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQwB,QAAQ,cAAjC,yBAIA,qBAAKxB,UAAU,UAAf,SACE,uBACE,UAAQ,aACRyB,KAAK,OACLC,GAAG,cACHC,MAAOR,EACPS,SA7BV,SAACN,GACDF,EAAcE,EAAMO,OAAOF,OAC3BV,KA4BUa,YAAY,0BACZ9B,UAAW+B,IAAW,QAAS,CAAE,YAAuB,KAAVjB,QAIvC,KAAVA,GAEC,mBAAGd,UAAU,iBAAiB,UAAQ,eAAtC,SACGc,OAKP,sBAAKd,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE,UAAQ,eACRyB,KAAK,SACLzB,UAAW+B,IAAW,kBACpB,CAAE,aAAcf,IAClBgB,SAAyB,KAAfb,EALZ,4BAWS,OAAVpB,GAEC,qBAAKC,UAAU,UAAf,SACE,wBACE,UAAQ,YACRyB,KAAK,SACLzB,UAAU,oBACViC,QAAS,kBApDrBlB,EAoD0ChB,QAnD1CqB,EAAc,KA+CJ,qCAaPrB,GAEC,sBAAKC,UAAU,YAAY,UAAQ,mBAAnC,UACE,oBAAIA,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWD,MAAOA,WCzFvB,IAAMmC,EAAM,WACjB,MAA4BhB,mBAAkB,IAA9C,mBAAOT,EAAP,KAAe0B,EAAf,KACA,EAA0BjB,mBAAuB,MAAjD,mBAAOnB,EAAP,KAAcqC,EAAd,KACA,EACIlB,mBAAoC,CACpCmB,SAAU,QACVC,MAAO,KAHX,mBAAOC,EAAP,KAAkBC,EAAlB,KAKA,EAA0BtB,mBAAiB,IAA3C,mBAAOJ,EAAP,KAAc2B,EAAd,KACA,EAAkCvB,oBAAS,GAA3C,mBAAOF,EAAP,KAAkB0B,EAAlB,KAEAC,qBAAU,WACR,IAAIC,EAEA,UAAWL,GACbK,EAAW,CACTvC,YAAakC,EAAUM,KACvB3C,OAA6B,QAArBqC,EAAUO,OACd,4DACAP,EAAUO,OACdvC,QAAQ,8BAAD,OAAgCgC,EAAUQ,QACjDpC,OAAQ4B,EAAUQ,OAClB3C,MAAOmC,EAAUS,OAGnBZ,EAASQ,GACTH,EAAS,KAETA,EAASF,EAAUD,SAEpB,CAACC,IAEJ,IAMMU,EAAelD,EAiBrB,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYS,OAAQA,MAGtB,qBAAKT,UAAU,UAAf,SACE,cAAC,EAAD,CACEa,SA9BJ,SAACqC,GCrCA,IAAkBC,EDsCnBT,GAAa,ICtCMS,EDuCVD,ECtCNE,MAAM,GAAD,OAHE,sDAGF,cAAiBD,IAC1BE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,iBAAO,CACZnB,SAAU,QACVC,MAAO,wBDkCQe,KAAKb,GAAciB,SAAQ,kBAAMf,GAAa,OA6BzD3C,MAAOA,EACPe,MAAOA,EACPC,MA1BM,WACPN,EAAOiD,MACV,SAAAC,GAAa,OAAIA,EAAchD,SAAWsC,EAAatC,WAEvDwB,EAAU,GAAD,mBAAK1B,GAAL,CAAawC,KAGtBb,EAAS,OAoBLpB,UAAWA,EACXC,kBAjBkB,WACxBwB,EAAS,aEzDbmB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5c67a31d.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\n\ntype FindMovieProps = {\n  onSearch: (movieTitle: string) => void,\n  movie: Movie | null,\n  error: string,\n  onAdd: (movie: Movie) => void,\n  isLoading: boolean,\n  clearErrorMessage: () => void,\n};\n\nexport const FindMovie: React.FC<FindMovieProps>\n  = ({\n    onSearch, movie, error, onAdd, isLoading, clearErrorMessage,\n  }) => {\n    const [movieTitle, setMovieTitle] = useState('');\n\n    const handleMovieTitle: React.ChangeEventHandler<HTMLInputElement>\n    = (event) => {\n      setMovieTitle(event.target.value);\n      clearErrorMessage();\n    };\n\n    const handleSubmit: React.FormEventHandler = (event) => {\n      event.preventDefault();\n      onSearch(movieTitle);\n    };\n\n    const handleAddClick = (currentMovie: Movie) => {\n      onAdd(currentMovie);\n      setMovieTitle('');\n    };\n\n    return (\n      <>\n        <form className=\"find-movie\" onSubmit={handleSubmit}>\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"movie-title\">\n              Movie title\n            </label>\n\n            <div className=\"control\">\n              <input\n                data-cy=\"titleField\"\n                type=\"text\"\n                id=\"movie-title\"\n                value={movieTitle}\n                onChange={handleMovieTitle}\n                placeholder=\"Enter a title to search\"\n                className={classNames('input', { 'is-danger': error !== '' })}\n              />\n            </div>\n\n            {error !== ''\n            && (\n              <p className=\"help is-danger\" data-cy=\"errorMessage\">\n                {error}\n              </p>\n            )}\n          </div>\n\n          <div className=\"field is-grouped\">\n            <div className=\"control\">\n              <button\n                data-cy=\"searchButton\"\n                type=\"submit\"\n                className={classNames('button is-light',\n                  { 'is-loading': isLoading })}\n                disabled={movieTitle === ''}\n              >\n                Find a movie\n              </button>\n            </div>\n\n            {movie !== null\n            && (\n              <div className=\"control\">\n                <button\n                  data-cy=\"addButton\"\n                  type=\"button\"\n                  className=\"button is-primary\"\n                  onClick={() => handleAddClick(movie)}\n                >\n                  Add to the list\n                </button>\n              </div>\n            )}\n          </div>\n        </form>\n\n        {movie\n        && (\n          <div className=\"container\" data-cy=\"previewContainer\">\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={movie} />\n          </div>\n        )}\n      </>\n    );\n  };\n","import { useEffect, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\nimport { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\nimport { getMovie } from './api';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [movieData, setMovieData]\n    = useState<MovieData | ResponseError>({\n      Response: 'False',\n      Error: '',\n    });\n  const [error, setError] = useState<string>('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    let response: Movie;\n\n    if ('Title' in movieData) {\n      response = {\n        description: movieData.Plot,\n        imgUrl: movieData.Poster === 'N/A'\n          ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n          : movieData.Poster,\n        imdbUrl: `https://www.imdb.com/title/${movieData.imdbID}`,\n        imdbId: movieData.imdbID,\n        title: movieData.Title,\n      };\n\n      setMovie(response);\n      setError('');\n    } else {\n      setError(movieData.Error);\n    }\n  }, [movieData]);\n\n  const findMovieProps\n    = (data: string): void => {\n      setIsLoading(true);\n      getMovie(data).then(setMovieData).finally(() => setIsLoading(false));\n    };\n\n  const currentMovie = movie as Movie;\n\n  const onAdd = () => {\n    if (!movies.find(\n      selectedMovie => selectedMovie.imdbId === currentMovie.imdbId,\n    )) {\n      setMovies([...movies, currentMovie]);\n      setMovie(null);\n    } else {\n      setMovie(null);\n    }\n  };\n\n  const clearErrorMessage = () => {\n    setError('');\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          onSearch={findMovieProps}\n          movie={movie}\n          error={error}\n          onAdd={onAdd}\n          isLoading={isLoading}\n          clearErrorMessage={clearErrorMessage}\n        />\n      </div>\n    </div>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'http://www.omdbapi.com/?i=tt3896198&apikey=6c88c076';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}